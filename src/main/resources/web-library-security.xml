<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">



	<http auto-config="true" use-expressions="true">

		<headers>
			<cache-control />
		</headers>


		<intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/adminbooks" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/books" access="isAuthenticated()" />
		<intercept-url pattern="/myprofile" access="isAuthenticated()" />
		<intercept-url pattern="/mybookmarks" access="isAuthenticated()" />



		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login login-page="/sign-in" default-target-url="/home"
			authentication-failure-url="/sign-in?error" username-parameter="login"
			password-parameter="password" />
		<logout logout-success-url="/sign-in?logout" delete-cookies="JSESSIONID" />
		<!-- enable csrf protection -->
		<csrf />

		<remember-me token-validity-seconds="1209600"
			remember-me-parameter="remember-me" data-source-ref="dataSource" />


	</http>


	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select login, password, enabled from users where login = ?"
				authorities-by-username-query="select login, role from user_roles where login = ?  " />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>



</beans:beans>  

